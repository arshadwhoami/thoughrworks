trigger:

-  none



pool:

  vmImage: ubuntu-latest

stages:
  - stage: InfraCreate
    displayName: Create Infra
    jobs:
      - deployment: TerraformApply
        displayName: Terraform Build
        #create an environment in ado 
        environment: 
        strategy:
            runOnce:
              deploy:
                steps:
                  - checkout: self
                  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
                    displayName: 'Install Terraform latest'

                  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
                    displayName: 'Terraform : init'
                    inputs:
                      workingDirectory: terraform
                      #include backend service name storageaacount for tfstate,container
                      backendServiceArm: newservice
                      backendAzureRmResourceGroupName: 
                      backendAzureRmStorageAccountName: 
                      backendAzureRmContainerName: 
                      backendAzureRmKey: 

                  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
                    displayName: 'Terraform : plan&apply'
                    inputs:
                      command: apply
                      workingDirectory: terraform


                      
                      environmentServiceNameAzureRM: newservice
                      #workingDirectory: terraform
                      backendServiceArm: newservice
                      backendAzureRmResourceGroupName: 
                      backendAzureRmStorageAccountName: 
                      backendAzureRmContainerName: 
                      backendAzureRmKey: 